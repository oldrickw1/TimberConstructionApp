
pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "oldrick/tca-frontend"  // Replace with your Docker Hub repository name
        DOCKER_TAG = "${env.BUILD_ID}" // Unique tag for each build
        KUBE_NAMESPACE = "tca" // Namespace in Minikube (use 'default' if unsure)
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                  docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                    // Build Docker image from the frontend folder
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} frontend/"
                    sh "docker tag ${DOCKER_IMAGE}:${DOCKER_TAG} ${DOCKER_IMAGE}:latest"
                  }
                }
            }
        }
          stage('Login to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    }
                }
            }
        }

          stage('Push Docker Image') {
            steps {
                script {
                       withDockerRegistry([ credentialsId: "docker-hub-credentials", url: "" ]) {
                        sh 'docker push ${DOCKER_IMAGE}:${DOCKER_TAG}' 
                    }
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images on Jenkins host after the build
            sh "docker rmi ${DOCKER_IMAGE}:${DOCKER_TAG} || true"
        }
    }
}
